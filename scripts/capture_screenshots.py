#!/usr/bin/env python3
"""
Script para automatizar capturas de pantalla de PopcornHour
"""

import requests
import time
import os
from datetime import datetime

# Configuraci√≥n
BASE_URL = "http://localhost:5000"
SCREENSHOTS_DIR = "Entregables/Checkpoint3-Capturas"

def create_directories():
    """Crear directorios necesarios"""
    os.makedirs(SCREENSHOTS_DIR, exist_ok=True)
    os.makedirs("Entregables/Checkpoint4-Videos", exist_ok=True)
    os.makedirs("Entregables/Checkpoint5-Videos", exist_ok=True)

def test_page_accessibility():
    """Probar que las p√°ginas son accesibles"""
    print("üîç Probando accesibilidad de p√°ginas...")
    
    pages = [
        ("/", "P√°gina de inicio sin sesi√≥n"),
        ("/login", "Formulario de login"),
        ("/register", "Formulario de registro"),
        ("/movies", "P√°gina de pel√≠culas"),
        ("/series", "P√°gina de series"),
        ("/foro", "P√°gina del foro")
    ]
    
    accessible_pages = []
    
    for route, description in pages:
        try:
            response = requests.get(f"{BASE_URL}{route}")
            if response.status_code == 200:
                print(f"  ‚úÖ {description}: {route}")
                accessible_pages.append((route, description))
            else:
                print(f"  ‚ùå {description}: {route} (Status: {response.status_code})")
        except Exception as e:
            print(f"  ‚ùå {description}: {route} (Error: {e})")
    
    return accessible_pages

def generate_screenshot_instructions():
    """Generar instrucciones para capturas de pantalla"""
    print("\nüì∏ INSTRUCCIONES PARA CAPTURAS DE PANTALLA")
    print("=" * 60)
    
    print("\nüéØ CHECKPOINT 3 - Capturas Requeridas:")
    print("1. P√°gina de inicio sin sesi√≥n")
    print("   - URL: http://localhost:5000")
    print("   - Guardar como: 01-home-sin-sesion.png")
    
    print("\n2. P√°gina de inicio con sesi√≥n (usuario est√°ndar)")
    print("   - Login con: testuser / 123456")
    print("   - Guardar como: 02-home-con-sesion-usuario.png")
    
    print("\n3. P√°gina de inicio con sesi√≥n (moderador)")
    print("   - Login con: superadmin / 123456")
    print("   - Guardar como: 03-home-con-sesion-moderador.png")
    
    print("\n4. Formulario de login")
    print("   - URL: http://localhost:5000/login")
    print("   - Guardar como: 04-formulario-login.png")
    
    print("\n5. Formulario de registro")
    print("   - URL: http://localhost:5000/register")
    print("   - Guardar como: 05-formulario-registro.png")

def generate_video_instructions():
    """Generar instrucciones para videos"""
    print("\nüé¨ INSTRUCCIONES PARA VIDEOS")
    print("=" * 60)
    
    print("\nüéØ CHECKPOINT 3 - Video de Flujo Completo:")
    print("1. Abrir http://localhost:5000")
    print("2. Mostrar p√°gina principal")
    print("3. Hacer clic en 'Registrarse'")
    print("4. Llenar formulario de registro")
    print("5. Mostrar registro exitoso")
    print("6. Hacer clic en 'Iniciar Sesi√≥n'")
    print("7. Llenar formulario de login")
    print("8. Mostrar login exitoso")
    print("9. Guardar como: Checkpoint3-flujo-completo.mp4")
    
    print("\nüéØ CHECKPOINT 4 - Videos de Autenticaci√≥n:")
    print("\nVideo 1 - Registro:")
    print("1. Ir a /register")
    print("2. Crear nuevo usuario")
    print("3. Mostrar mensaje de √©xito")
    print("4. Guardar como: Checkpoint4-01-registro.mp4")
    
    print("\nVideo 2 - Login:")
    print("1. Ir a /login")
    print("2. Login con usuario existente")
    print("3. Mostrar acceso al perfil")
    print("4. Guardar como: Checkpoint4-02-login.mp4")
    
    print("\nVideo 3 - Persistencia de Sesi√≥n:")
    print("1. Estar logueado")
    print("2. Recargar p√°gina")
    print("3. Ir a /profile")
    print("4. Mostrar que la sesi√≥n persiste")
    print("5. Guardar como: Checkpoint4-03-persistencia.mp4")
    
    print("\nüéØ CHECKPOINT 5 - Video de P√°gina Din√°mica:")
    print("1. Mostrar p√°gina sin sesi√≥n")
    print("2. Hacer login")
    print("3. Mostrar cambios en la interfaz")
    print("4. Navegar por pel√≠culas/series")
    print("5. Mostrar interacciones (rese√±as, foro)")
    print("6. Guardar como: Checkpoint5-pagina-dinamica.mp4")

def generate_test_scenarios():
    """Generar escenarios de prueba"""
    print("\nüß™ ESCENARIOS DE PRUEBA")
    print("=" * 60)
    
    print("\nüë§ Usuario Est√°ndar (testuser / 123456):")
    print("- ‚úÖ Navegar por pel√≠culas y series")
    print("- ‚úÖ Hacer rese√±as")
    print("- ‚úÖ Participar en foro")
    print("- ‚úÖ Ver perfil personal")
    print("- ‚ùå Acceder a funciones de moderador")
    
    print("\nüëë Moderador (superadmin / 123456):")
    print("- ‚úÖ Todas las funciones de usuario est√°ndar")
    print("- ‚úÖ Panel de moderador visible")
    print("- ‚úÖ Agregar pel√≠culas y series")
    print("- ‚úÖ Editar contenido existente")
    print("- ‚úÖ Eliminar contenido")
    print("- ‚úÖ Moderar foro")

def main():
    print("üçø GENERADOR DE INSTRUCCIONES PARA CAPTURAS Y VIDEOS")
    print("=" * 60)
    
    # Crear directorios
    create_directories()
    
    # Probar accesibilidad
    accessible_pages = test_page_accessibility()
    
    # Generar instrucciones
    generate_screenshot_instructions()
    generate_video_instructions()
    generate_test_scenarios()
    
    print("\n" + "=" * 60)
    print("üìã RESUMEN DE ENTREGABLES")
    print("=" * 60)
    
    print(f"\n‚úÖ P√°ginas accesibles: {len(accessible_pages)}/6")
    print("‚úÖ Estructura de directorios creada")
    print("‚úÖ Instrucciones generadas")
    
    print("\nüìÅ Archivos a crear:")
    print("- Entregables/Checkpoint3-Capturas/ (5 capturas)")
    print("- Entregables/Checkpoint3-Video/ (1 video)")
    print("- Entregables/Checkpoint4-Videos/ (3 videos)")
    print("- Entregables/Checkpoint5-Videos/ (1 video)")

if __name__ == "__main__":
    main() 